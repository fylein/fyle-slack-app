name: Fyle slack application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      SECRET_KEY: thisisafakedjangosecretkey
      FYLE_APP_URL: fakefyleappurl
      FYLE_CLIENT_ID: fakefyleclientid
      FYLE_CLIENT_SECRET: fakefyleclientsecret
      FYLE_ACCOUNTS_URL: fakefyleaccounturl
      FYLE_BRANCHIO_BASE_URI: fakefylebranchiobaseuri
      SLACK_CLIENT_ID: fakeslackclientid
      SLACK_CLIENT_SECRET: fakeslackclientsecret
      SLACK_APP_TOKEN: fakeslackapptoken
      SLACK_SIGNING_SECRET: fakeslacksigningsecret
      SLACK_APP_ID: fakeslackappid
      SLACK_SERVICE_BASE_URL: fakeslackservicebaseurl
      FYLEHQ_SLACK_URL: fakefylehqurl
      FYLE_SLACK_APP_SEGMENT_KEY: fakesegmentkey
      ALLOWED_HOSTS: fakeallowedhosts
      DB_NAME: fakedbname
      DB_USER: fakedbuser
      DB_PASSWORD: fakedbpassword
      DB_HOST: fakedbhost
      DB_PORT: fakedbport
      FYLE_STOPLIGHT_URL: https://stoplight.io/mocks/fyle/fyle-platform-docs

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run pylint checks
      run: |
        pylint --rcfile=.pylintrc fyle_slack_app/ fyle_slack_service/
    - name: Test with pytest
      run: |
        pytest -vvv
