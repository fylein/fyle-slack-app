apiVersion: v1
kind: Service
metadata:
  name: slack-app
  namespace: integrations
  labels:
    app: slack-app
spec:
  type: ClusterIP
  ports:
    - port: 8000
  selector:
    app: slack-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slack-app
  namespace: integrations
  labels:
    app: slack-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: slack-app
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: slack-app
    spec:
      containers:
        - name: slack-app
          image: docker.io/{{DOCKERHUB_USERNAME}}/fyle_slack-app:{{RELEASE_VERSION}}
          resources:
            limits:
              memory: 200Mi
            requests:
              memory: 200Mi
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /ready
              port: 8000
            initialDelaySeconds: 10
            timeoutSeconds: 1
          envFrom:
            - secretRef:
                name: slack-app-secrets
      terminationGracePeriodSeconds: 60
      imagePullSecrets:
        - name: myregistrykey2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: slack-app-qcluster
  namespace: integrations
  labels:
    app: slack-app-qcluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: slack-app-qcluster
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: slack-app-qcluster
    spec:
      containers:
        - name: slack-app
          image: docker.io/{{DOCKERHUB_USERNAME}}/fyle_slack-app:{{RELEASE_VERSION}}
          resources:
            limits:
              memory: 400Mi
            requests:
              memory: 400Mi
          command: [ 'bash', 'run_qcluster.sh' ]
          envFrom:
            - secretRef:
                name: slack-app-secrets
      terminationGracePeriodSeconds: 60
      imagePullSecrets:
        - name: myregistrykey2
